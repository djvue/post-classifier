name: Build test and deploy

on: [push, pull_request]

jobs:

  build:
    runs-on: ubuntu-latest
    environment: prod
    env:
      docker_registry_user: ${{ secrets.CI_REGISTRY_USER }}
      docker_registry_password: ${{ secrets.CI_REGISTRY_PASSWORD }}
      #image: djvue/urfu-deployments:post-classifier-${{ github.ref_name }}
      base_image: djvue/urfu-deployments
      image: djvue/urfu-deployments:post-classifier-${{ github.sha }}
      image_latest: djvue/urfu-deployments:post-classifier-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login into docker hub
      run: docker login -u $docker_registry_user -p "$docker_registry_password"
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $image
    - name: Push the Docker streamlit image
      run: docker tag $image $image_latest
    - name: Push the Docker streamlit image
      run: docker push --all-tags $base_image

  test:
    name: Lint and test
    needs: [build]
    runs-on: ubuntu-latest
    environment: prod
    env:
      image: djvue/urfu-deployments:post-classifier-${{ github.sha }}
    steps:
    - uses: actions/checkout@v2
    # TODO: add Flake8
    #- name: Flake8
    #  run: docker run --rm --entrypoint /bin/bash -t $image -c "flake8"
    - name: Download datasets
      run: mkdir data && docker run --rm \
        -v $PWD/data:/app/data \
        --entrypoint /bin/bash \
        -t $image -c "dvc remote modify --local minio access_key_id \"${{ secrets.DVC_S3_ACCESS_KEY }}\" \
        && dvc remote modify --local minio secret_access_key \"${{ secrets.DVC_S3_SECRET_KEY }}\" \
        && dvc pull"
    - name: Train model
      run: docker run --rm --entrypoint /bin/bash -t $image -c "python train_model.py"
    - name: Tests
      run: docker run --rm --entrypoint /bin/bash -t $image -c "python -m pytest"

  deploy:
    name: Deploy to prod host
    needs: build
    runs-on: ubuntu-latest
    environment: prod
    env:
      dir: /opt/post-classifier
      image: djvue/urfu-deployments:post-classifier-${{ github.sha }}
    timeout-minutes: 5
    steps:
      - name: Download model
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd $dir
            mkdir -p data
            docker run --rm \
              -v $PWD/data:/app/data \
              --entrypoint /bin/bash \
              -t $image -c "dvc remote modify --local minio access_key_id \"${{ secrets.DVC_S3_ACCESS_KEY }}\" \
                && dvc remote modify --local minio secret_access_key \"${{ secrets.DVC_S3_SECRET_KEY }}\" \
                && dvc pull"
            ls -al data
      - name: Deploy image
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            whoami
            ls -al